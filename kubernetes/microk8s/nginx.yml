apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  labels:
    app: nginx
spec:
  ingressClassName: nginx
  rules:
    - host: "www.example.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    app: nginx
spec:
  type: ClusterIP
  selector:
    app: nginx
    component: nginx
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 81
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      component: nginx
  template:
    metadata:
      labels:
        app: nginx
        component: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
          #  - containerPort: 80
            - containerPort: 81
          volumeMounts:
            - name: default-html
              mountPath: /usr/share/nginx/html/echo
            - name: default-conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: default-html
          configMap:
            name: nginx-configmap
            items:
              - key: echo.txt
                path: echo.txt
        - name: default-conf
          configMap:
            name: nginx-configmap
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  labels:
    app: nginx
data:
  echo.txt: |-
    tryMe! tryMe!! tryMe!!!
  default.conf: |-
    server {
        listen       81 default_server;
        server_name  www.example.com 192.168.19.130;

        #access_log  /var/log/nginx/host.access.log  main;
        access_log   /var/log/nginx/access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }




